name: release
on:
  push:
    branches: [ master ]
jobs:
  build:
    name: Build and Sonar Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Extract project informations
        id: pom
        run: |
          echo ::set-output name=name::$(grep "<name>" pom.xml | awk -F "name" '{gsub(">|</","",$0); print $2;}')
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)          
          echo ::set-output name=organization::$(grep "<sonar.organization>" pom.xml | awk -F "sonar.organization" '{gsub(">|</","",$0); print $2;}')
          echo ::set-output name=sha_short::$(git rev-parse --short HEAD)  

      - name: Get project informations
        run: |
          echo "Project name: ${{ steps.pom.outputs.name }}"
          echo "Project version: ${{ steps.pom.outputs.version }}"
          echo "Sonar organization: ${{ steps.pom.outputs.organization }}" 
          echo "Short hash: ${{ steps.pom.outputs.sha_short }}"

      - name: Maven Build and Sonar analyze
        id: build_sonar_analyze
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          RESULT=$( mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
                      -Dsonar.projectKey=${{ steps.pom.outputs.organization }}_${{ steps.pom.outputs.name }} \
                      -Dsonar.qualitygate.wait=true \
                      -Dsonar.qualitygate.timeout=300 \
                      -Dsonar.qualitygate='QualityGate-Percent70' \
                      -Dmaven.test.skip=true \
                  )
          echo "$RESULT"
          echo ::set-output name=result::$( echo $RESULT | grep -o "QUALITY GATE STATUS: PASSED" || echo " Status" ) 

      - name: Check Quality Gate Result
        env:
          COMMIT_VAR: ${{ contains(steps.build_sonar_analyze.outputs.result, 'PASSED') }}
        run: |
          if ${COMMIT_VAR} == true ; then
              echo -e "\033[32;1;4mQUALITY GATE STATUS: PASSED\033[0m"
          else
              echo -e "\033[31;1;4mQUALITY GATE STATUS: FAILED\033[0m"
              exit 1
          fi   


      - name: Generate release number
        id: generate_release_number
        run: echo ::set-output name=release_number::$( echo "${{ steps.pom.outputs.name }}.${{ steps.pom.outputs.version }}" ) 
      - run: echo -e "New release number:\033[32;1;4m${{ steps.generate_release_number.outputs.release_number }}\033[0m"

      # delete-previous-branch-release:
      - name: Compute Branch Name
        id: compute-branch
        run: echo "${{ github.ref }}" | sed "s,^refs/heads/,::set-output name=RELEASE_BRANCH::,"
      - name: Delete Previous Branch Release
        uses: dev-drprasad/delete-tag-and-release@v0.1.2
        if: startswith(github.ref, 'refs/heads/')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            delete_release: true # default: false
            tag_name: "${{ steps.compute-branch.outputs.RELEASE_BRANCH }}-${{ steps.generate_release_number.outputs.release_number }}-LATEST"
        
      - name: Create Releasea
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ steps.compute-branch.outputs.RELEASE_BRANCH }}-${{ steps.generate_release_number.outputs.release_number }}-LATEST"
          release_name: "${{ steps.compute-branch.outputs.RELEASE_BRANCH }}-${{ steps.generate_release_number.outputs.release_number }}-LATEST"
          draft: false
          prerelease: false
          body: |
            Changes in this Release
            - First Change
            - Second Change
            - Third Change
